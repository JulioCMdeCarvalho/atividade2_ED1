{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red128\green128\blue0;\red192\green192\blue192;\red128\green128\blue64;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16  1  \cb3\cf17 #include <stdio.h>
\par \cb1\cf0\ul0\i0\b0  2  \cb3\cf17 #include <stdlib.h>
\par \cb1\cf0\ul0\i0\b0  3  \cb3\cf17 #include <locale.h>
\par \cb1\cf0\ul0\i0\b0  4  \cb3\cf4 /*
\par \cb1\cf0\ul0\i0\b0  5  \cb3\cf4 4. Faça um programa para armazenar em memória
\par \cb1\cf0\ul0\i0\b0  6  \cb3\cf4 um vetor de dados contendo 1500 valores do tipo int,
\par \cb1\cf0\ul0\i0\b0  7  \cb3\cf4 usando a função de alocação dinâmica de memória calloc:
\par \cb1\cf0\ul0\i0\b0  8  \cb3\cf4 a. Faça um loop e verifique se o vetor contém realmente
\par \cb1\cf0\ul0\i0\b0  9  \cb3\cf4 os 1500 valores inicializados com zero
\par \cb1\cf0\ul0\i0\b0 10  \cb3\cf4 (conte os 1500 zeros do vetor).
\par \cb1\cf0\ul0\i0\b0 11  \cb3\cf4 b. Atribua para cada elemento do vetor o valor
\par \cb1\cf0\ul0\i0\b0 12  \cb3\cf4 do seu índice junto a este vetor.
\par \cb1\cf0\ul0\i0\b0 13  \cb3\cf4 c. Exibir na tela os endereços dos 10 primeiros
\par \cb1\cf0\ul0\i0\b0 14  \cb3\cf4 e dos 10 últimos elementos do vetor.
\par \cb1\cf0\ul0\i0\b0 15  \cb3\cf4 */
\par \cb1\cf0\ul0\i0\b0 16  \cb3\cf15\b int \b0\cb1\cf0 main\cb3\cf26 ()
\par \cb1\cf0\ul0\i0\b0 17  \cb3\cf26 \{
\par \cb1\cf0\ul0\i0\b0 18      \cb1\cf0 setlocale\cb3\cf26 (\cb1\cf0 LC_ALL\cb3\cf26 ,\cb3\cf21 ""\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 19      \cb3\cf6 //a)
\par \cb1\cf0\ul0\i0\b0 20      \cb3\cf15\b int \b0\cb3\cf26 *\cb1\cf0 vetor\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 21      \cb3\cf15\b int \b0\cb1\cf0 cont\cb3\cf26 , \cb1\cf0 i\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 22  
\par \cb1\cf0\ul0\i0\b0 23      \cb1\cf0 vetor \cb3\cf26 = (\cb3\cf15\b int\b0\cb3\cf26 *)\cb1\cf0 calloc\cb3\cf26 (\cb3\cf13 1500\cb3\cf26 , \cb3\cf15\b sizeof\b0\cb3\cf26 (\cb3\cf15\b int\b0\cb3\cf26 ));
\par \cb1\cf0\ul0\i0\b0 24  
\par \cb1\cf0\ul0\i0\b0 25      \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Conteúdo do vetor: \\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 26      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ; \cb1\cf0 i\cb3\cf26 <=\cb3\cf13 1499\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 27         \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "%d"\cb3\cf26 , \cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 28      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 29      \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 30      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ; \cb1\cf0 i\cb3\cf26 <=\cb3\cf13 1499\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 31          \cb3\cf15\b if \b0\cb3\cf26 (\cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ] == \cb3\cf13 0\cb3\cf26 )\{
\par \cb1\cf0\ul0\i0\b0 32              \cb1\cf0 cont \cb3\cf26 += \cb3\cf13 1\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 33          \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 34      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 35      \cb3\cf15\b if\b0\cb3\cf26 (\cb1\cf0 cont \cb3\cf26 == \cb3\cf13 1500\cb3\cf26 )\{
\par \cb1\cf0\ul0\i0\b0 36          \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Vetor contém 1500 posições em zero \\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 37      \cb3\cf26 \}\cb3\cf15\b else\b0\cb3\cf26 \{
\par \cb1\cf0\ul0\i0\b0 38          \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Vetor não contém 1500 posições em zero \\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 39      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 40  
\par \cb1\cf0\ul0\i0\b0 41      \cb3\cf6 //b)
\par \cb1\cf0\ul0\i0\b0 42      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 <=\cb3\cf13 1500\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 43          \cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ] = \cb1\cf0 i\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 44      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 45      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ; \cb1\cf0 i\cb3\cf26 <=\cb3\cf13 1499\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 46         \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Posição: %d - Conteúdo: %d"\cb3\cf26 , \cb1\cf0 i\cb3\cf26 , \cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 47      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 48  
\par \cb1\cf0\ul0\i0\b0 49      \cb3\cf6 //c)
\par \cb1\cf0\ul0\i0\b0 50      \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Os 10 primeiros endereços do vetor: \\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 51      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 <=\cb3\cf13 10\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 52          \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Endereço %d : %p \\n"\cb3\cf26 , \cb1\cf0 i\cb3\cf26 , (\cb3\cf15\b void\b0\cb3\cf26 *)&\cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 53      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 54      \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Os 10 últimos endereços do vetor: \\n"\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 55      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i\cb3\cf26 =\cb3\cf13 1490\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 <=\cb3\cf13 1500\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 56          \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "\\n Endereço %d : %p \\n"\cb3\cf26 , \cb1\cf0 i\cb3\cf26 , (\cb3\cf15\b void\b0\cb3\cf26 *)&\cb1\cf0 vetor\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 57      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 58      \cb1\cf0 free\cb3\cf26 (\cb1\cf0 vetor\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 59  
\par \cb1\cf0\ul0\i0\b0 60  \cb3\cf26 \}
\par }