{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red128\green128\blue0;\red192\green192\blue192;\red128\green128\blue64;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16  1  \cb3\cf17 #include <stdio.h>
\par \cb1\cf0\ul0\i0\b0  2  \cb3\cf17 #include <stdlib.h>
\par \cb1\cf0\ul0\i0\b0  3  \cb3\cf17 #include <locale.h>
\par \cb1\cf0\ul0\i0\b0  4  \cb3\cf4 /*
\par \cb1\cf0\ul0\i0\b0  5  \cb3\cf4 1. Implemente uma função que receba dois vetores de inteiros v1 e v2,
\par \cb1\cf0\ul0\i0\b0  6  \cb3\cf4 mais um inteiro N com o tamanho dos vetores.
\par \cb1\cf0\ul0\i0\b0  7  \cb3\cf4 Sua função deve alocar e retornar um vetor de inteiros de tamanho N
\par \cb1\cf0\ul0\i0\b0  8  \cb3\cf4 onde o elemento na posição i de v3 é a soma dos elementos na posição i
\par \cb1\cf0\ul0\i0\b0  9  \cb3\cf4 de v1 e v2.
\par \cb1\cf0\ul0\i0\b0 10  
\par \cb1\cf0\ul0\i0\b0 11  \cb3\cf4 Sua função deve ter a seguinte declaração:
\par \cb1\cf0\ul0\i0\b0 12  
\par \cb1\cf0\ul0\i0\b0 13  \cb3\cf4 int * soma_vetores(int *v1, int *v2, int N);
\par \cb1\cf0\ul0\i0\b0 14  
\par \cb1\cf0\ul0\i0\b0 15  \cb3\cf4 Para testar seu programa, crie uma função main() que chame
\par \cb1\cf0\ul0\i0\b0 16  \cb3\cf4 sua função soma_vetores e imprima os valores somados.
\par \cb1\cf0\ul0\i0\b0 17  
\par \cb1\cf0\ul0\i0\b0 18  \cb3\cf4 */
\par \cb1\cf0\ul0\i0\b0 19  \cb3\cf15\b int \b0\cb3\cf26 * \cb1\cf0 soma_vetores\cb3\cf26 (\cb3\cf15\b int \b0\cb3\cf26 *\cb1\cf0 v1\cb3\cf26 , \cb3\cf15\b int \b0\cb3\cf26 *\cb1\cf0 v2\cb3\cf26 , \cb3\cf15\b int \b0\cb1\cf0 N\cb3\cf26 )\{
\par \cb1\cf0\ul0\i0\b0 20  
\par \cb1\cf0\ul0\i0\b0 21      \cb3\cf15\b int \b0\cb3\cf26 *\cb1\cf0 v3 \cb3\cf26 = \cb1\cf0 malloc\cb3\cf26 (\cb1\cf0 N \cb3\cf26 * \cb3\cf15\b sizeof\b0\cb3\cf26 (\cb3\cf15\b int\b0\cb3\cf26 ));
\par \cb1\cf0\ul0\i0\b0 22      \cb3\cf15\b for\b0\cb3\cf26 (\cb3\cf15\b int \b0\cb1\cf0 i\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 <\cb1\cf0 N\cb3\cf26 ;\cb1\cf0 i\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 23          \cb1\cf0 v3\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ] = \cb1\cf0 v2\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ] + \cb1\cf0 v1\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ];
\par \cb1\cf0\ul0\i0\b0 24      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 25      \cb3\cf15\b return \b0\cb1\cf0 v3\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 26  \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 27  
\par \cb1\cf0\ul0\i0\b0 28  \cb3\cf15\b int \b0\cb1\cf0 main\cb3\cf26 ()
\par \cb1\cf0\ul0\i0\b0 29  \cb3\cf26 \{
\par \cb1\cf0\ul0\i0\b0 30      \cb1\cf0 setlocale\cb3\cf26 (\cb1\cf0 LC_ALL\cb3\cf26 ,\cb3\cf21 ""\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 31      \cb3\cf15\b int \b0\cb1\cf0 v1\cb3\cf26 [\cb3\cf13 5\cb3\cf26 ],\cb1\cf0 v2\cb3\cf26 [\cb3\cf13 5\cb3\cf26 ],\cb1\cf0 i2\cb3\cf26 , \cb1\cf0 N\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 32      \cb3\cf15\b int\b0\cb3\cf26 * \cb1\cf0 v3\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 33      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i2\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ;\cb1\cf0 i2\cb3\cf26 <=\cb3\cf13 4\cb3\cf26 ;\cb1\cf0 i2\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 34          \cb1\cf0 v1\cb3\cf26 [\cb1\cf0 i2\cb3\cf26 ] = \cb3\cf13 3\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 35      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 36      \cb3\cf15\b for\b0\cb3\cf26 (\cb1\cf0 i2\cb3\cf26 =\cb3\cf13 0\cb3\cf26 ;\cb1\cf0 i2\cb3\cf26 <=\cb3\cf13 4\cb3\cf26 ;\cb1\cf0 i2\cb3\cf26 ++)\{
\par \cb1\cf0\ul0\i0\b0 37          \cb1\cf0 v2\cb3\cf26 [\cb1\cf0 i2\cb3\cf26 ] = \cb3\cf13 7\cb3\cf26 ;
\par \cb1\cf0\ul0\i0\b0 38      \cb3\cf26 \}
\par \cb1\cf0\ul0\i0\b0 39      \cb1\cf0 N \cb3\cf26 = \cb3\cf15\b sizeof\b0\cb3\cf26 (\cb1\cf0 v1\cb3\cf26 )/\cb3\cf15\b sizeof\b0\cb3\cf26 (\cb1\cf0 v1\cb3\cf26 [\cb3\cf13 0\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 40      \cb1\cf0 v3 \cb3\cf26 = \cb1\cf0 soma_vetores\cb3\cf26 (\cb1\cf0 v1\cb3\cf26 ,\cb1\cf0 v2\cb3\cf26 ,\cb1\cf0 N\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 41      \cb3\cf15\b for \b0\cb3\cf26 (\cb3\cf15\b int \b0\cb1\cf0 i \cb3\cf26 = \cb3\cf13 0\cb3\cf26 ; \cb1\cf0 i \cb3\cf26 < \cb1\cf0 N\cb3\cf26 ; \cb1\cf0 i\cb3\cf26 ++)
\par \cb1\cf0\ul0\i0\b0 42          \cb1\cf0 printf\cb3\cf26 (\cb3\cf21 "Valor na posição %d: %d\\n"\cb3\cf26 , \cb1\cf0 i\cb3\cf26 , \cb1\cf0 v3\cb3\cf26 [\cb1\cf0 i\cb3\cf26 ]);
\par \cb1\cf0\ul0\i0\b0 43      \cb1\cf0 free\cb3\cf26 (\cb1\cf0 v3\cb3\cf26 );
\par \cb1\cf0\ul0\i0\b0 44  \cb3\cf26 \}
\par }